v0.1.3
 - Add function to compute Maskit polynomials and slice, as well as an interactive Maskit slice explorer.

v0.1.2
 - Major bugfixes to circle space action
 - Remove a couple of minor examples that are no longer helpful

v0.1.1
 - The primary improvements in this version are related to Farey sequences and Farey word:
   - Added continued fractions algorithms to farey module
   - Better peripheral splittings function, farey.standard_peripheral_generators()
   - Add algorithms to compute rational pleating rays, see examples/parabolic_slice_pleating_rays.py
 - Other miscellaneous changes:
   - Add accidental parabolic example and an example of (1;2)-compression body groups.
   - Compute Lyndon-Ullman bounds in the Riley slice explorer

v0.1.0
 - Bug #21: only compute coprime primitice slices and raise exception with helpful error on failed convergence
 - Add interactive tool for exploring Riley slices
 - Bugfix: slices.elliptic_exterior() failed if p or q were infinite
 - Add Schottky groups to examples
 - Add miscellaneous utility functions to Cayley that work directly with Mobius transformations:
   - action_on_circles(), which computes the action of Mobius transformations on the projective space of circles
   - three functions to convert usual parameters for circles and lines into the corresponding points of the projective space of circles
   - normalise_mobius_pair(), which normalises a pair of Mobius transformations to fix 0, infinity, and map 0->1.

v0.0.99
 - a myriad of new examples
 - new method in cayley to construct groups by taking orientation-preserving half of group generated by circle inversions
 - faster limit set calculation via random walks with one point
 - automatically determine peripheral subgroups of Riley groups
 - improved test coverage

v0.0.98.post1
 - delete ununused code in riley.py that depends on `deprecated` package not in dependencies

v0.0.98
 - FIX incorrect computation of Farey polynomials
 - Increase mpmath precision
 - Add some unit tests
 - Change Farey polynomials to work with initial traces instead of matrix entries
 - Allow computation of Farey words and polynomials after substituting for the generators
 - New syntax for generating Riley slice approximations (slice.py) which allows for
   experiments involving different Farey word substitutions.
 - Improve examples

v0.0.97
 - Computation of Riley slice approximations (moduli.py).
 - Convert all internals to use [mpmath](https://mpmath.org/) instead of numpy.
 - Add methods (farey.riley_string(), farey.riley_polynomial_*()) to compute Riley words and polynomials.
 - `examples/plotslice.py` now is interactive and shows both Riley and Farey polynomial approximations.
 - Add method (cayley.GroupCache.coloured_isometric_circles_mc()) to produce isometric circles.
 - Rename some methods in farey to make them less ambiguous.
 - Remove functions in farey that compute Phi^inf,inf - 2 because there is no point in having them.

v0.0.96
 - Construction of Riley groups now takes a holonomy angle not an order (use riley.ClassicalRileyGroup for old behaviour).
 - Add new feature to `guess' which pleating ray a particular Riley group lies on (riley.RileyGroup.guess_rational_coordinate()).

v0.0.95
 - Minimum viable product without Riley slice computations.
